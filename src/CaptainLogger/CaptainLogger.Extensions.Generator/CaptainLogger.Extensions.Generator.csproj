<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <IsPackable>True</IsPackable>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
    <TargetFramework>netstandard2.0</TargetFramework>
  </PropertyGroup>

  <ItemGroup>
    <None Remove="bin\Debug\netstandard2.0\\CaptainLogger.Extensions.Generator.dll" />
    <None Remove="bin\Debug\netstandard2.0\\CaptainLogger.Contracts.dll" />
  </ItemGroup>

  <ItemGroup>
    <None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
    <None Include="$(OutputPath)\CaptainLogger.Contracts.dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="4.14.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.14.0">
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup> 
  
  <ItemGroup>
    <ProjectReference Include="..\CaptainLogger.Contracts\CaptainLogger.Contracts.csproj" />
  </ItemGroup>

  <!-- 
  https://github.com/dotnet/roslyn/issues/52017#issuecomment-1046216200
  This automatically adds explicit and transient dependencies so that they are available at the time the generator is executed. 
-->
  <Target Name="AddGenerationTimeReferences" AfterTargets="ResolvePackageDependenciesForBuild">
    <ItemGroup>
      <None Include="@(ResolvedCompileFileDefinitions)" Pack="true" PackagePath="analyzers/dotnet/cs" />
    </ItemGroup>
  </Target>

</Project>
namespace CaptainLogger.Contracts.Options;


/// <summary>
/// Specifies the output targets where CaptainLogger should send log entries.
/// Supports combining multiple targets via flags.
/// </summary>
[Flags]
public enum Recipients
{
  /// <summary>
  /// Logging is disabled.
  /// </summary>
  None = 0,

  /// <summary>
  /// Writes logs to the console output.
  /// </summary>
  Console = 1,

  /// <summary>
  /// Writes logs to a file on disk.
  /// </summary>
  File = 2,

  /// <summary>
  /// Writes logs to a provided <see cref="Stream"/> instance.
  /// </summary>
  Stream = 4
}

/// <summary>
/// Specifies how frequently log files are rotated when <see cref="Recipients.File"/> is enabled in the configuration.
/// </summary>
public enum LogRotation
{
  /// <summary>
  /// No rotation — logs are written to a single file indefinitely.
  /// </summary>
  None = 0,

  /// <summary>
  /// Creates a new log file each year.
  /// </summary>
  Year = 1,

  /// <summary>
  /// Creates a new log file each month.
  /// </summary>
  Month = 2,

  /// <summary>
  /// Creates a new log file each day.
  /// </summary>
  Day = 3,

  /// <summary>
  /// Creates a new log file each hour.
  /// </summary>
  Hour = 4,

  /// <summary>
  /// Creates a new log file each minute.
  /// </summary>
  Minute = 5
}

/// <summary>
/// Defines how many structured argument overloads will be generated by CaptainLogger.Extensions.Generator.
/// Supports up to six arguments.
/// </summary>
public enum LogArguments
{
  /// <summary>
  /// No arguments.
  /// </summary>
  Zero = 0,

  /// <summary>
  /// One argument.
  /// </summary>
  One = 1,

  /// <summary>
  /// Two arguments.
  /// </summary>
  Two = 2,

  /// <summary>
  /// Three arguments.
  /// </summary>
  Three = 3,

  /// <summary>
  /// Four arguments.
  /// </summary>
  Four = 4,

  /// <summary>
  /// Five arguments.
  /// </summary>
  Five = 5,

  /// <summary>
  /// Six arguments.
  /// </summary>
  Six = 6
}
